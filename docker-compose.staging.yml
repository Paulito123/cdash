version: '3.8'

services:

  web:
    container_name: cdash-web
    build:
      context: ./services/web
      dockerfile: Dockerfile.prod
    command: gunicorn --bind 0.0.0.0:5000 manage:app
    volumes:
      - static_volume:/home/app/web/project/static
    expose:
      - 5000
    env_file:
      - ./.env.prod
    depends_on:
      - db

  redis:
    container_name: cdash-redis
    image: redis:6.2-alpine

  db:
    container_name: cdash-db
    image: postgres:13-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.prod.db

  nginx-proxy:
    container_name: cdash-nginx-proxy
    build: services/nginx
    restart: always
    ports:
      - 443:443
      - 80:80
    volumes:
      - static_volume:/home/app/web/staticfiles
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - web

  nginx-proxy-letsencrypt:
    container_name: cdash-letsencrypt
    image: jrcs/letsencrypt-nginx-proxy-companion
    env_file:
      - ./.env.staging.proxy-companion
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - acme:/etc/acme.sh
    depends_on:
      - nginx-proxy

  chrome:
    container_name: cdash-chrome
    image: selenium/standalone-chrome:latest
    hostname: chrome
    privileged: true
    shm_size: 2g
    depends_on:
      - db

  crawler:
    container_name: cdash-crawler
    build: ./services/crawler
    command: python project/app.py
    volumes:
      - ./services/crawler/:/usr/src/app/
    depends_on:
      - chrome
    env_file:
      - ./.env.prod

  notifier:
    container_name: cdash-notifier
    build: ./services/notifier
    volumes:
      - ./services/notifier/:/usr/src/app/
    depends_on:
      - db
    env_file:
      - ./.env.prod.notifier

volumes:
  postgres_data:
  static_volume:
  certs:
  html:
  vhost:
  acme: